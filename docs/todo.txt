 - . -> :
 - --------------------
 * checkSig(): signing from peers to prove
 * request checker response: { status: OK, public-key: '..', cache: 'no-persist' } - no-persist if it's an incoming ui object, etc
 - --------------------
 * React coupling
   - hardwiring from obj to notify react (o.react)
     - and from react to notify obj (o.user-state)
   - set output notify callback
   - recv incoming as Alerted
   - React cpt refers to state and 'subscribes' to it (o.react.notify)
   - React cpt is actually the user object, which can observe a top object and anything linked under it
     - state('watching.counter') what if that changes?
     - state('giphy.url') instead of state('image') - but disappears, so no
     - state('image') relies on 'own' state subscribing and setting something for render
 - --------------------
 - drop peer-* with no WS/discard pkts
 - request checker on websockets too
 - --------------------
 - Cache: no-persist = for user-state too
    - thus Cache: [ .. ] in a list
    - or merge into user object..
 - --------------------
 - test: incomingObject sets Updated (e.g. results pushed, initially, but also polled)
 - shadow object in update
 - don't see UID as a change
 - --------------------
 - don't use fetch() in recache(), cos it pulls the whole lot as objects into memory anyway! even though GC-able, just scan string first at least
 - incomingObject/incomingObjectFromGET don't they need to set Peer? (ws detects json.Peer, watch out)
 - --------------------
 - doGet:
    - Version -> ETag? 304s are coming back with weak ETags
 - treat shell case differently from refresh? (initial load timeout different from polling rate?)
    - do you retry in ONR if you fail to see the object come in? if so, must be over 10s
 - can have remote URL in any object
    - evaluate / animated remotely of course
    - only need Notify and render
    - wrap remote with Forest, like WebObjects did?
       - send user-state over the wire
 - --------------------
 x deletion of properties: set eval return value to undefined/''/[]/null and they're removed
 - deletion of objects? returning 404
 - --------------------
 - more widgets: selector, radio, textarea..
 - --------------------
 - move numactive, numcompleted, shownTodos logic into evaluate (render is just show/hide/iterate no logic)
 - --------------------


 - --------------------
 x Notifying as a list, don't put into Notify
 x if Alerted not observed, remove Notify
 - --------------------
 x don't see Timer: 0 as a change
 x don't observe match on just UID
 x save rem uid in config
 - --------------------
 x refresh? after viewed and time rel to cache ttl
    x only look through giphy (url) if button pressed, but then need to look through when it comes in and notify/evaluates.. ?
    x fetching on every view through url in path means you only don't notify when remote object is not changed
      .. and giphy always changes, so you get stuck in a loop
    x giphy: opaque URLs; non-idempotency
 - --------------------
 x any other way to pass thread than setTimeout(1)? setTimeout(0)!!
   x need to queue up doEvaluates, not use setTimeout?
   x only call doEvaluate if not already signalled
 - --------------------
 x properly detect no diffs (to prevent looping)
 x don't add Notify for just UID string match (prevent mutual obs of objects in the first place)
 x store (ntf->rem) host/cache/remote uid in localStorage/config
 x save changes to shadow in eval loop, save to persistence, .then() make public and notify
 x only send remote Notify entries not local (prevent remote duplicating notifications back to you)
 x Timer===0 not a change
 - --------------------



